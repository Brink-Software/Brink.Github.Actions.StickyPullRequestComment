name: Test
on:
  pull_request_target:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - run: yarn install
      - run: |
          set -o pipefail
          mkdir -p ./pr
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "all_result<<$EOF" >> "$GITHUB_ENV"
          yarn all >> "$GITHUB_ENV" 2>&1 || true  # proceed even if yarn fails
          echo >> "$GITHUB_ENV"  # yarn all doesn't necessarily produce a newline
          echo "$EOF" >> "$GITHUB_ENV"
        id: all
      - uses: ./
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          header: All
          message: |
            <details open>
            <summary>Output of yarn all</summary>

            ```shell
            ${{ env.all_result }}
            ```
            </details>
      - uses: ./
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          header: All
          append: true
          hide_details: true
          message: |
            The build is over.
      - name: Lint
        run: npm run lint
      - name: Format Check
        run: npm run format-check
